<?php

namespace MockingMagician\CoinbaseProSdk\Tests\Exp;

use Amp\Coroutine;
use Amp\Loop;
use Amp\Websocket\Client\Connection;
use Amp\Websocket\Message;
use MockingMagician\CoinbaseProSdk\Functional\Misc\Json;
use MockingMagician\CoinbaseProSdk\Functional\Websocket\WSSimpleClient;
use PHPUnit\Framework\TestCase;
use function Amp\delay;
use function Amp\Promise\wait;
use function Amp\Websocket\Client\connect;

class WSSimpleClientExpTest extends TestCase
{
    /**
     * @var WSSimpleClient
     */
    private $coinbaseSocket;
    /**
     * @var string
     */
    private $subscriber;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->subscriber = <<<DOC
{
    "type": "subscribe",
    "product_ids": [
        "XLM-EUR"
    ],
    "channels": [
        "full"
    ]
}
DOC;
        $this->coinbaseSocket = new WSSimpleClient('wss://ws-feed.pro.coinbase.com');
    }

    public function testConnection()
    {
        /** @var Coroutine $connection */
        $connection = connect('wss://ws-feed.pro.coinbase.com');
        $connection = wait($connection);
        /** @var Connection $connection */
        wait($connection->send($this->subscriber));
        $i = 0;
        while (++$i < 30) {
            $message = wait($connection->receive());
            $payload = wait($message->buffer());
            dump(Json::decode($payload));
            usleep(10000);
        }
        $connection->close();
    }
}
